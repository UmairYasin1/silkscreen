@model HaroonPOSWeb.Models.MaterialInModel
@{
    ViewBag.Title = "Material In";
    Layout = null;
}
@using (Html.BeginForm("MaterialInDataSetup", "Material", FormMethod.Post, new { role = "form" }))
{
    <div class="modal-header">
        <h5 class="modal-title"><label id="title"></label></h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
    <div class="modal-body">
        <div class="form-body">
            @Html.HiddenFor(m => m.MaterialInId)
            <div class="row">
                <div class="col-md-12">
                    <div class="form-group">
                        <label class="control-label">Purchaser </label>
                        @Html.DropDownListFor(model => model.MatInPurchaserId, ViewBag.MatInPurchaserList as SelectList, "--select--")
                        @Html.ValidationMessageFor(model => model.MatInPurchaserId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="form-group">
                        <label class="control-label">Item </label>
                        @Html.TextBoxFor(model => model.PurchaseItem, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.PurchaseItem, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="form-group">
                        <label class="control-label">Quantity </label>
                        @Html.TextBoxFor(model => model.Quantity, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="form-group">
                        <label class="control-label">Rate </label>
                        @Html.TextBoxFor(model => model.Rate, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Rate, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="form-group">
                        <label class="control-label">Quality </label>
                        @Html.TextBoxFor(model => model.Quality, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Quality, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="form-group">
                        <label class="control-label">Size </label>
                        @Html.TextBoxFor(model => model.Size, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Size, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="form-group">
                        <label class="control-label">Cartridge </label>
                        @Html.TextBoxFor(model => model.Cartridge, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Cartridge, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
        <input type="submit" name="send" value="Save" id="btnMaterial" class="btn btn-primary waves-effect" />
    </div>
}
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>